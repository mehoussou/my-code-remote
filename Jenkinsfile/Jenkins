
pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID="162816112568"
        AWS_DEFAULT_REGION= "us-east-2"
        IMAGE_REPO_NAME="my-code-chall"
        IMAGE_TAG="b1""f1" or make both "latest"
        REPOSITORY_URI= "162816112568.dkr.ecr.us-east-2.amazonaws.com/my-code-chall"
    }
    
    stages {
    
        stage('Logging into AWS ECR'){
            steps {
                script {
                    sh 'aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/v3f8i0q6'
                }
            }
         }
         
         stage ('Cloning Git') {
            steps {
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/mehoussou/my-code-remote-pub']])
            }
         }
            
         stage ('Building images.....'){
            steps {
                script {
                    dockerImage = docker.build "public.ecr.aws/v3f8i0q6/my-code-chall-app:latest"
                }
            }
         }
         
         //Uploading Docker images into AWS ECR
         
         stage ('Tagging and Pushing Imagesto ECR....'){
            steps {
                script {
                    sh 'docker tag my-code-chall:latest 162816112568.dkr.ecr.us-east-2.amazonaws.com/my-code-chall:latest'
                    sh 'docker push 162816112568.dkr.ecr.us-east-2.amazonaws.com/my-code-chall:latest'
                }
            }  
         }
         
         
         stage ('Running Apllication.......'){
            steps{
                script {
                    sh 'docker-compose -d -p 3000:3000 --rm --name 162816112568.dkr.ecr.us-east-2.amazonaws.com/my-code-chall:latest' 
                }
            }
         }     
     }        
}
